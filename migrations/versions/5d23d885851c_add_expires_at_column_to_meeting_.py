"""Add expires_at column to meeting_requests

Revision ID: 5d23d885851c
Revises: 02b6016c5545
Create Date: 2025-03-31 11:51:57.289971

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "5d23d885851c"
down_revision = "02b6016c5545"
branch_labels = None
depends_on = None


def upgrade():
    # Add expires_at column as nullable first
    with op.batch_alter_table("meeting_requests", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "expires_at",
                sa.DateTime(),
                nullable=True))

    # Get bind and update existing rows
    connection = op.get_bind()
    connection.execute(
        sa.text(
            """
            UPDATE meeting_requests
            SET expires_at = created_at + INTERVAL '24 hours'
            WHERE expires_at IS NULL
            """
        )
    )

    # Make the column non-nullable
    with op.batch_alter_table("meeting_requests", schema=None) as batch_op:
        batch_op.alter_column("expires_at", nullable=False)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("meeting_requests", schema=None) as batch_op:
        batch_op.drop_column("expires_at")

    # ### end Alembic commands ###
